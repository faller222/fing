package Presentacion;

import DataTypes.DataCliente;
import DataTypes.DataLinea;
import DataTypes.DataOrdenCompra;
import DataTypes.DataProducto;
import Interfaces.Fabrica;
import Interfaces.IAgregarOrden;
import java.awt.Dimension;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class AddOrden extends javax.swing.JInternalFrame {

    private IAgregarOrden IAO;
    private Map<String, DataCliente> Datas;
    private Map<Integer, DataProducto> Productos;
    private Map<String, DataProducto> ProdOrden;
    private Integer[] NRefs;
    private DefaultComboBoxModel MBoxProductos;
    private DefaultTableModel MTableLinea;
    private DataCliente Cliente;
    private DataOrdenCompra info;

    public AddOrden() {
        initComponents();
        //Maneja tama√±o
        Presentacion MAIN = Presentacion.getPrincipal();
        Integer Alto = MAIN.getHeight() - 60;
        Integer Ancho = MAIN.getWidth() - 10;
        this.setPreferredSize(new Dimension(Ancho, Alto));

        IAO = Fabrica.getIAO();

        Datas = IAO.listarClientes();
        this.resetTabla(Tabla);


        //CargarArbol
        Presentacion.getPrincipal().cargarArbol(Arbol);


        //Tabla Lineas
        MTableLinea = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        MTableLinea.setColumnIdentifiers(new String[]{"Cantidad", "Producto", "SubTotal"});
        tablaLineas.setModel(MTableLinea);

        //Lista de productos a comprar
        ProdOrden = new HashMap();


        paneProd.setVisible(false);
        darkPanel.setVisible(false);


        btnConfirmar.setVisible(false);
        //Visible
        this.setVisible(true);

    }

    private void MostrarMensaje(String Mensaje, String Titulo) {
        JOptionPane.showMessageDialog(this,
                Mensaje,
                Titulo,
                JOptionPane.INFORMATION_MESSAGE);
    }

    private void resetTabla(JTable Tabla) {
        DefaultTableModel modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        modelo.setColumnIdentifiers(new Object[]{"NickName", "E-Mail"});
        for (Map.Entry<String, DataCliente> entry : Datas.entrySet()) {
            modelo.addRow(new Object[]{entry.getValue().getNickname(), entry.getValue().getMail()});
        }
        Tabla.setModel(modelo);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalir = new javax.swing.JButton();
        paneUsuarios = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        btnConfirmar = new javax.swing.JButton();
        paneProd = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Arbol = new javax.swing.JTree();
        listProductos = new javax.swing.JComboBox();
        txtCant = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnQuitar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaLineas = new javax.swing.JTable();
        darkPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablaProd = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();

        setTitle("Agregar Orden de Compra");
        setToolTipText("");

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel1.setText("Seleccionar Cliente");

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "NickName", "E-Mail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla);
        Tabla.getColumnModel().getColumn(0).setResizable(false);
        Tabla.getColumnModel().getColumn(1).setResizable(false);

        javax.swing.GroupLayout paneUsuariosLayout = new javax.swing.GroupLayout(paneUsuarios);
        paneUsuarios.setLayout(paneUsuariosLayout);
        paneUsuariosLayout.setHorizontalGroup(
            paneUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneUsuariosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(paneUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        paneUsuariosLayout.setVerticalGroup(
            paneUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneUsuariosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        Arbol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ArbolMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Arbol);

        listProductos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        listProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listProductosMouseClicked(evt);
            }
        });
        listProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listProductosActionPerformed(evt);
            }
        });

        txtCant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantActionPerformed(evt);
            }
        });

        jLabel2.setText("Cantidad:");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnQuitar.setText("Quitar");
        btnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarActionPerformed(evt);
            }
        });

        tablaLineas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tablaLineas);

        javax.swing.GroupLayout paneProdLayout = new javax.swing.GroupLayout(paneProd);
        paneProd.setLayout(paneProdLayout);
        paneProdLayout.setHorizontalGroup(
            paneProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneProdLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(paneProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneProdLayout.createSequentialGroup()
                        .addGroup(paneProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(paneProdLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(paneProdLayout.createSequentialGroup()
                                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneProdLayout.createSequentialGroup()
                            .addComponent(listProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))))
        );
        paneProdLayout.setVerticalGroup(
            paneProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneProdLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(listProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnQuitar)
                    .addComponent(btnAgregar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))
            .addGroup(paneProdLayout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        darkPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                darkPanelComponentShown(evt);
            }
        });

        jLabel3.setText("La orden de compra fue ingresada con exito.");

        jLabel4.setText("Cliente:");

        jLabel5.setText("Email");

        jLabel6.setText("Nickname");

        jLabel7.setText("Nro. orden");

        jLabel8.setText("Precio Total");

        TablaProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(TablaProd);

        jTextField1.setEditable(false);
        jTextField1.setText("jTextField1");
        jTextField1.setAutoscrolls(false);

        jTextField2.setEditable(false);
        jTextField2.setText("jTextField2");
        jTextField2.setAutoscrolls(false);

        jTextField3.setEditable(false);
        jTextField3.setText("jTextField3");

        jTextField4.setEditable(false);
        jTextField4.setText("jTextField4");

        jTextField5.setEditable(false);
        jTextField5.setText("jTextField5");

        javax.swing.GroupLayout darkPanelLayout = new javax.swing.GroupLayout(darkPanel);
        darkPanel.setLayout(darkPanelLayout);
        darkPanelLayout.setHorizontalGroup(
            darkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(darkPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(darkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(darkPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(darkPanelLayout.createSequentialGroup()
                        .addGroup(darkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(darkPanelLayout.createSequentialGroup()
                                .addGroup(darkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                .addGroup(darkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                    .addComponent(jTextField2))
                                .addGap(0, 26, Short.MAX_VALUE))
                            .addGroup(darkPanelLayout.createSequentialGroup()
                                .addGroup(darkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(darkPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(darkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, darkPanelLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        darkPanelLayout.setVerticalGroup(
            darkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(darkPanelLayout.createSequentialGroup()
                .addGroup(darkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(darkPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGroup(darkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(darkPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5))
                            .addGroup(darkPanelLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(darkPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(darkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(paneUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(paneProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(darkPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConfirmar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(btnSalir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConfirmar)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paneUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(paneProd, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(darkPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.setVisible(false);
        this.hide();
        Presentacion.SwapMenu();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void TablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMouseClicked

        Cliente = (DataCliente) Datas.get(Tabla.getValueAt(Tabla.getSelectedRow(), 0).toString());
        paneUsuarios.setVisible(!true);
        String[] texto = {"Seleccione un Producto"};
        MBoxProductos = new DefaultComboBoxModel(texto);
        listProductos.setModel(MBoxProductos);
        paneProd.setVisible(true);
        btnConfirmar.setVisible(true);
    }//GEN-LAST:event_TablaMouseClicked

    private void ArbolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ArbolMouseClicked
        try {
            String[] texto = {"Seleccione un Producto"};
            MBoxProductos = new DefaultComboBoxModel(texto);
            listProductos.setModel(MBoxProductos);

            if (Arbol.getLeadSelectionPath() != null) {
                String seleccion = Arbol.getLeadSelectionPath().getLastPathComponent().toString();

                if (IAO.buscarCategoria(seleccion).getEsSimple()) {

                    Productos = IAO.listarProductosCategoria(seleccion);

                    MBoxProductos.removeAllElements();
                    NRefs = new Integer[Productos.size() + 1];

                    MBoxProductos.addElement("Seleccione un Producto");
                    int i = 1;
                    for (Map.Entry<Integer, DataProducto> entry : Productos.entrySet()) {
                        MBoxProductos.addElement(entry.getValue().getNombre());
                        NRefs[i] = entry.getValue().getNRef();
                        i++;
                    }

                    listProductos.setModel(MBoxProductos);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_ArbolMouseClicked

    private void listProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listProductosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_listProductosMouseClicked

    private void listProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listProductosActionPerformed
    }//GEN-LAST:event_listProductosActionPerformed

    private void txtCantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        try {
            if (tablaLineas.getRowCount() == 0) {
                MostrarMensaje("Debe tener al menos un producto", "Error");
            } else {
                IAO.seleccionarCliente(Cliente.getNickname());
                for (int i = 0; i < tablaLineas.getRowCount(); i++) {
                    DataProducto dp = ProdOrden.get(tablaLineas.getValueAt(i, 1).toString());
                    Integer cant = Integer.parseInt(tablaLineas.getModel().getValueAt(i, 0).toString());
                    IAO.agregarProductoAOrden(dp, cant);
                }
                info = IAO.altaOrden();


                //No muestro nada
                paneUsuarios.setVisible(false);
                paneProd.setVisible(false);
                btnConfirmar.setVisible(false);

                darkPanel.setVisible(true);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        String Producto = listProductos.getSelectedItem().toString();
        if (!ProdOrden.containsKey(Producto)) {
            if (listProductos.getSelectedIndex() == 0) {
                MostrarMensaje("Por favor seleccione un producto.", "Error");
            } else {
                boolean Correcto = true;
                try {
                    Integer prueba = Integer.parseInt(txtCant.getText());
                    if (prueba <= 0) {
                        MostrarMensaje("Cantidad invalida.", "Error");
                        Correcto = false;
                    }

                } catch (NumberFormatException e) {
                    MostrarMensaje("Cantidad invalida.", "Error");
                    Correcto = false;
                }
                if (Correcto) {
                    DataProducto Nuevo = Productos.get(NRefs[listProductos.getSelectedIndex()]);
                    ProdOrden.put(Nuevo.getNombre(), Nuevo);

                    Float aux = Nuevo.getPrecio() * Float.parseFloat(txtCant.getText());

                    MTableLinea.addRow(new Object[]{txtCant.getText(), Nuevo.getNombre(), aux});



                    tablaLineas.setModel(MTableLinea);
                }
            }

        }

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarActionPerformed
        if (tablaLineas.getSelectedRow() != -1) {
            ProdOrden.remove(tablaLineas.getValueAt(tablaLineas.getSelectedRow(), 1).toString());
            DefaultTableModel modelo = (DefaultTableModel) tablaLineas.getModel();
            modelo.removeRow(tablaLineas.getSelectedRow());

        }


    }//GEN-LAST:event_btnQuitarActionPerformed

    private void darkPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_darkPanelComponentShown
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy - hh:mm");
        jTextField3.setText(sdf.format(new Date()).toString());
        jTextField1.setText(Cliente.getNombre());
        jTextField2.setText(Cliente.getMail());
        jTextField4.setText(info.getNumero().toString());
        jTextField5.setText(info.getTotal().toString());
        DefaultTableModel modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        modelo.setColumnIdentifiers(new Object[]{"Cantidad", "Producto", "Precio Unitario"});
        List<DataLinea> lineas = info.getLineas();
        for (Iterator<DataLinea> it = lineas.iterator(); it.hasNext();) {
            DataLinea dataLinea = it.next();
            modelo.addRow(new Object[]{dataLinea.getCantidad(), dataLinea.getProd().getNombre(), dataLinea.getPrecioProd()});
        }
        TablaProd.setModel(modelo);
    }//GEN-LAST:event_darkPanelComponentShown
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree Arbol;
    private javax.swing.JTable Tabla;
    private javax.swing.JTable TablaProd;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnQuitar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JPanel darkPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JComboBox listProductos;
    private javax.swing.JPanel paneProd;
    private javax.swing.JPanel paneUsuarios;
    private javax.swing.JTable tablaLineas;
    private javax.swing.JTextField txtCant;
    // End of variables declaration//GEN-END:variables
}
