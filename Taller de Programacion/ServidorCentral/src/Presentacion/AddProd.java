package Presentacion;

import DataTypes.DataCategoria;
import DataTypes.DataProducto;
import DataTypes.DataProveedor;
import Interfaces.Fabrica;
import Interfaces.IAgregarProducto;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class AddProd extends javax.swing.JInternalFrame {

    IAgregarProducto IAP = Fabrica.getIAP();
    Map<String, DataProveedor> Proves;
    String[] ListaProve;
    DataProducto Nuevo;
    DefaultListModel MListCate;
    DefaultComboBoxModel MBoxCate;

    /**
     * Creates new form AddProd
     */
    public AddProd() {
        initComponents();

        //Maneja tamaño
        Presentacion MAIN = Presentacion.getPrincipal();
        Integer Alto = MAIN.getHeight() - 60;
        Integer Ancho = MAIN.getWidth() - 10;
        this.setPreferredSize(new Dimension(Ancho, Alto));

        //ComboBox Proveedores
        Proves = IAP.listarProveedores();
        ListaProve = new String[Proves.size() + 1];
        int i = 0;
        for (Map.Entry<String, DataProveedor> entry : Proves.entrySet()) {
            ListaProve[i] = entry.getValue().getNickname();
            i++;
        }

        ListaProve[i] = "Seleccione un Proveedor";
        DefaultComboBoxModel Modelo = new DefaultComboBoxModel(ListaProve);
        listProve.setModel(Modelo);
        listProve.setSelectedIndex(i);

        //ComboBox Cates
        MBoxCate = new DefaultComboBoxModel();

        CargarCates(MBoxCate, IAP.listarCategorias());

        boxCate.setModel(MBoxCate);
        //Lista Cates
        MListCate = new DefaultListModel();
        //Visible <-- siempre al final
        paneCates.setVisible(false);
        this.setVisible(true);
    }

    private void CargarCates(DefaultComboBoxModel Modelo, DataCategoria Cate) {
        ArrayList<DataCategoria> Hijas = Cate.getCateHijas();
        for (DataCategoria dC : Hijas) {
            if (dC.getEsSimple()) {
                Modelo.addElement(dC.getNombre());
            } else {
                CargarCates(Modelo, dC);
            }
        }
    }

    private void MostrarMensaje(String Mensaje, String Titulo) {
        JOptionPane.showMessageDialog(this,
                Mensaje,
                Titulo,
                JOptionPane.INFORMATION_MESSAGE);
    }

    private void doClose() {
        this.setVisible(false);
        this.hide();
        Presentacion.SwapMenu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnSalir = new javax.swing.JButton();
        paneDatos = new javax.swing.JPanel();
        listProve = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtEsp = new javax.swing.JTextArea();
        txtNombre = new javax.swing.JTextField();
        txtNRef = new javax.swing.JTextField();
        txtDesc = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        btnFijar = new javax.swing.JButton();
        paneCates = new javax.swing.JPanel();
        boxCate = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listCate = new javax.swing.JList();
        btnModificar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setTitle("Agregar Producto");

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        listProve.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar Proveedor" }));

        jLabel1.setText("Nombre");

        jLabel2.setText("Nº de Referencia");

        jLabel4.setText("Especificacion");

        jLabel3.setText("Decripcion");

        jLabel6.setText("Proveedor");

        jLabel5.setText("Precio (U$S)");

        txtEsp.setColumns(20);
        txtEsp.setRows(5);
        txtEsp.setAutoscrolls(false);
        jScrollPane1.setViewportView(txtEsp);

        txtNombre.setAutoscrolls(false);
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        txtNRef.setAutoscrolls(false);

        txtDesc.setAutoscrolls(false);

        txtPrecio.setAutoscrolls(false);

        btnFijar.setText("Fijar Datos");
        btnFijar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFijarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneDatosLayout = new javax.swing.GroupLayout(paneDatos);
        paneDatos.setLayout(paneDatosLayout);
        paneDatosLayout.setHorizontalGroup(
            paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnFijar)
                    .addGroup(paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtPrecio, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtDesc, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtNRef, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(listProve, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        paneDatosLayout.setVerticalGroup(
            paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNRef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listProve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btnFijar))
        );

        boxCate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Categoria"}));

        jLabel7.setText("Categoria");

        btnAdd.setText("Agregar");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        listCate.setModel(new javax.swing.AbstractListModel() {
            String[] strings = {};
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listCate);

        btnModificar.setText("Volver");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnDel.setText("Quitar");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneCatesLayout = new javax.swing.GroupLayout(paneCates);
        paneCates.setLayout(paneCatesLayout);
        paneCatesLayout.setHorizontalGroup(
            paneCatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneCatesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneCatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneCatesLayout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(boxCate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addGroup(paneCatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        paneCatesLayout.setVerticalGroup(
            paneCatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneCatesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneCatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModificar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneCatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxCate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneCatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnDel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paneDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(paneCates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSalir)
                    .addComponent(paneDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(paneCates, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(130, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        int n = JOptionPane.showConfirmDialog(
                this,
                "¿Realmente quiere desea salir?\nNada sera guardado.",
                "Saliendo...",
                JOptionPane.YES_NO_OPTION);

        if (n == JOptionPane.YES_OPTION) {
            doClose();
        }
    }//GEN-LAST:event_btnSalirActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnFijarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFijarActionPerformed
        boolean Correcto = true;

        //Chequeo Nombre Vacio
        if (Correcto & txtNombre.getText().equals("")) {
            MostrarMensaje("Debe Ingresar un Nombre.", "Error");
            Correcto = false;
        }

        //Chequeo Descripcion Vacio
        if (Correcto & txtDesc.getText().equals("")) {
            MostrarMensaje("Debe Ingresar una Descripcion.", "Error");
            Correcto = false;
        }

        //Chequeo Numero de Referencia Vacio
        if (Correcto & txtNRef.getText().equals("")) {
            MostrarMensaje("Debe Ingresar un Numero de Referencia.", "Error");
            Correcto = false;
        }

        //Chequeo Precio Vacio
        if (Correcto & txtPrecio.getText().equals("")) {
            MostrarMensaje("Debe Ingresar un Precio.", "Error");
            Correcto = false;
        }

        //Chequeo Proveedor not selected
        if (Correcto & listProve.getSelectedIndex() == listProve.getItemCount() - 1) {
            MostrarMensaje("Debe Ingresar un Proveedor.", "Error");
            Correcto = false;
        }

        //Chequeo Formato Numero de Referencia
        if (Correcto) {
            try {
                Integer.parseInt(txtNRef.getText());
            } catch (NumberFormatException e) {
                MostrarMensaje("Numero de Referencia invalido.", "Error");
                Correcto = false;
            }
        }

        //Chequeo Formato Precio
        if (Correcto) {
            try {
                Float prueba = Float.parseFloat(txtPrecio.getText());
                if (prueba < 0) {
                    MostrarMensaje("Precio invalido.", "Error");
                    Correcto = false;
                }

            } catch (NumberFormatException e) {
                MostrarMensaje("Precio invalido.", "Error");
                Correcto = false;
            }
        }

        if (Correcto) {
            Nuevo = new DataProducto(txtNombre.getText(),
                    txtDesc.getText(),
                    txtEsp.getText(),
                    Integer.parseInt(txtNRef.getText()),
                    Float.parseFloat(txtPrecio.getText()),
                    listProve.getSelectedItem().toString(), 0);
            try {
                IAP.ingresarDataProducto(Nuevo);
            } catch (Exception e) {
                MostrarMensaje(e.getMessage(), "Error");
                Correcto = false;
            }
        }

        if (Correcto) {
            paneDatos.setVisible(false);
            paneCates.setVisible(true);
        }
    }//GEN-LAST:event_btnFijarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        if (MListCate.isEmpty()) {
            MostrarMensaje("Debe Ingresar al menos una categoria", "Error");
        } else {
            int n = JOptionPane.showConfirmDialog(
                    this,
                    "¿Son los datos correctos?.",
                    "Guardando...",
                    JOptionPane.YES_NO_OPTION);

            if (n == JOptionPane.YES_OPTION) {
                try {
                    for (Object object : MListCate.toArray()) {
                        IAP.agregarCategoriaAProducto(object.toString());
                    }
                    IAP.altaProducto();
                } catch (Exception e) {
                    System.out.println("tiró exception");
                }

                MostrarMensaje("El producto fue guardado correctamente", "Correcto");
                doClose();
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        paneDatos.setVisible(true);
        paneCates.setVisible(false);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (boxCate.getItemCount() != 0) {
            String Categoria = boxCate.getSelectedItem().toString();
            MBoxCate.removeElement(Categoria);
            MListCate.addElement(Categoria);
            boxCate.setModel(MBoxCate);
            listCate.setModel(MListCate);
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        if (listCate.getSelectedValue() != null) {
            String Categoria = listCate.getSelectedValue().toString();
            MListCate.removeElement(Categoria);
            MBoxCate.addElement(Categoria);
            boxCate.setModel(MBoxCate);
            listCate.setModel(MListCate);
            listCate.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnDelActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox boxCate;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnFijar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList listCate;
    private javax.swing.JComboBox listProve;
    private javax.swing.JPanel paneCates;
    private javax.swing.JPanel paneDatos;
    private javax.swing.JTextField txtDesc;
    private javax.swing.JTextArea txtEsp;
    private javax.swing.JTextField txtNRef;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
