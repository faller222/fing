package Presentacion;

import DataTypes.DataCategoria;
import DataTypes.DataProducto;
import DataTypes.DataUsuario;
import Interfaces.Fabrica;
import Interfaces.IVerModProducto;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class ModProd extends javax.swing.JInternalFrame {

    IVerModProducto IVMP = Fabrica.getIVMP();
    Map<String, DataUsuario> Proves;
    String[] ListaProve;
    DataProducto Nuevo;
    DefaultListModel MListCate;
    DefaultComboBoxModel MBoxCate;
    Map<Integer, DataProducto> Productos;
    int[] NRefs;
    String[] Lista;

    /**
     * Creates new form ModProd
     */
    public ModProd() {
        initComponents();
        //Maneja tamaño
        Presentacion MAIN = Presentacion.getPrincipal();
        Integer Alto = MAIN.getHeight() - 60;
        Integer Ancho = MAIN.getWidth() - 10;
        this.setPreferredSize(new Dimension(Ancho, Alto));


        //box Prods
        String[] texto = {"Seleccione un Producto"};
        listProductos.setModel(new DefaultComboBoxModel(texto));

        Presentacion.getPrincipal().cargarArbol(Arbol);

        //ComboBox Cates
        MBoxCate = new DefaultComboBoxModel();

        CargarCates(MBoxCate, IVMP.listarCategorias());

        boxCate.setModel(MBoxCate);
        //Lista Cates
        MListCate = new DefaultListModel();


        //Visible
        paneDatos.setVisible(false);
        paneCates.setVisible(false);

        this.setVisible(true);
    }

    private void CargarCates(DefaultComboBoxModel Modelo, DataCategoria Cate) {
        ArrayList<DataCategoria> Hijas = Cate.getCateHijas();
        for (DataCategoria dC : Hijas) {
            if (dC.getEsSimple()) {
                Modelo.addElement(dC.getNombre());
            } else {
                CargarCates(Modelo, dC);
            }
        }
    }

    private void doClose() {
        this.setVisible(false);
        this.hide();
        Presentacion.SwapMenu();
    }

    private void MostrarMensaje(String Mensaje, String Titulo) {
        JOptionPane.showMessageDialog(this,
                Mensaje,
                Titulo,
                JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalir = new javax.swing.JButton();
        paneDatos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtEsp = new javax.swing.JTextArea();
        txtNombre = new javax.swing.JTextField();
        txtNRef = new javax.swing.JTextField();
        txtDesc = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        btnFijar = new javax.swing.JButton();
        paneCates = new javax.swing.JPanel();
        boxCate = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listCate = new javax.swing.JList();
        btnModificar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        listProductos = new javax.swing.JComboBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        Arbol = new javax.swing.JTree();

        setTitle("Modificar Producto");

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre");

        jLabel2.setText("Nº de Referencia");

        jLabel4.setText("Especificacion");

        jLabel3.setText("Decripcion");

        jLabel5.setText("Precio (U$S)");

        txtEsp.setColumns(20);
        txtEsp.setRows(5);
        txtEsp.setAutoscrolls(false);
        jScrollPane2.setViewportView(txtEsp);

        txtNombre.setAutoscrolls(false);
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        txtNRef.setEditable(false);
        txtNRef.setAutoscrolls(false);
        txtNRef.setEnabled(false);

        txtDesc.setAutoscrolls(false);

        txtPrecio.setAutoscrolls(false);

        btnFijar.setText("Fijar Datos");
        btnFijar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFijarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneDatosLayout = new javax.swing.GroupLayout(paneDatos);
        paneDatos.setLayout(paneDatosLayout);
        paneDatosLayout.setHorizontalGroup(
            paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnFijar)
                    .addComponent(txtDesc)
                    .addComponent(txtNRef)
                    .addComponent(txtNombre)
                    .addComponent(jScrollPane2)
                    .addComponent(txtPrecio))
                .addContainerGap())
        );
        paneDatosLayout.setVerticalGroup(
            paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneDatosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNRef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFijar))
        );

        boxCate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Categoria"}));

        jLabel7.setText("Categoria");

        btnAdd.setText("Agregar");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        listCate.setModel(new javax.swing.AbstractListModel() {
            String[] strings = {};
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(listCate);

        btnModificar.setText("Volver");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Confirmar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnDel.setText("Quitar");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneCatesLayout = new javax.swing.GroupLayout(paneCates);
        paneCates.setLayout(paneCatesLayout);
        paneCatesLayout.setHorizontalGroup(
            paneCatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneCatesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneCatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneCatesLayout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                    .addComponent(boxCate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneCatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        paneCatesLayout.setVerticalGroup(
            paneCatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneCatesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(paneCatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModificar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneCatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxCate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paneCatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnDel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        listProductos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "eaaa 1", "Item 2", "Item 3", "Item 4" }));
        listProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listProductosActionPerformed(evt);
            }
        });

        Arbol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ArbolMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(Arbol);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(listProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(paneDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(paneCates, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSalir)
                            .addComponent(listProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(paneDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paneCates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        int n = JOptionPane.showConfirmDialog(
                this,
                "¿Realmente quiere desea salir?\nNada sera guardado.",
                "Saliendo...",
                JOptionPane.YES_NO_OPTION);

        if (n == JOptionPane.YES_OPTION) {
            doClose();
        }
    }//GEN-LAST:event_btnSalirActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnFijarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFijarActionPerformed
        boolean Correcto = true;

        //Chequeo Nombre Vacio
        if (Correcto & txtNombre.getText().equals("")) {
            MostrarMensaje("Debe Ingresar un Nombre.", "Error");
            Correcto = false;
        }

        //Chequeo Descripcion Vacio
        if (Correcto & txtDesc.getText().equals("")) {
            MostrarMensaje("Debe Ingresar una Descripcion.", "Error");
            Correcto = false;
        }

        //Chequeo Numero de Referencia Vacio
        if (Correcto & txtNRef.getText().equals("")) {
            MostrarMensaje("Debe Ingresar un Numero de Referencia.", "Error");
            Correcto = false;
        }

        //Chequeo Precio Vacio
        if (Correcto & txtPrecio.getText().equals("")) {
            MostrarMensaje("Debe Ingresar un Precio.", "Error");
            Correcto = false;
        }

        //Chequeo Formato Numero de Referencia
        if (Correcto) {
            try {
                Integer.parseInt(txtNRef.getText());
            } catch (NumberFormatException e) {
                MostrarMensaje("Numero de Referencia invalido.", "Error");
                Correcto = false;
            }
        }

        //Chequeo Formato Precio
        if (Correcto) {
            try {
                Float prueba = Float.parseFloat(txtPrecio.getText());
                if (prueba < 0) {
                    MostrarMensaje("Precio invalido.", "Error");
                    Correcto = false;
                }
            } catch (NumberFormatException e) {
                MostrarMensaje("Precio invalido.", "Error");
                Correcto = false;
            }
        }

        if (Correcto) {
            Nuevo.setNombre(txtNombre.getText());
            Nuevo.setDescripcion(txtDesc.getText());
            Nuevo.setEspecificacion(txtEsp.getText());
            Nuevo.setPrecio(Float.parseFloat(txtPrecio.getText()));

            try {
                IVMP.seleccionarProducto(Nuevo.getNRef());
            } catch (Exception e) {
                MostrarMensaje("Ya existe otro Producto con el mismo Nombre.", "Error");
                Correcto = false;
            }
        }

        if (Correcto) {
            paneDatos.setVisible(false);
            paneCates.setVisible(true);
        }
    }//GEN-LAST:event_btnFijarActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (boxCate.getItemCount() != 0) {
            String Categoria = boxCate.getSelectedItem().toString();
            MBoxCate.removeElement(Categoria);
            MListCate.addElement(Categoria);
            boxCate.setModel(MBoxCate);
            listCate.setModel(MListCate);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        paneDatos.setVisible(true);

        paneCates.setVisible(false);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        int n = JOptionPane.showConfirmDialog(
                this,
                "¿Son los datos correctos?.",
                "Guardando...",
                JOptionPane.YES_NO_OPTION);

        if (n == JOptionPane.YES_OPTION) {
            try {
                for (Object object : MListCate.toArray()) {
                    Nuevo.agregarCategorias(new DataCategoria(object.toString(), true));
                }
                IVMP.modificarProducto(Nuevo);
            } catch (Exception e) {
                e.printStackTrace();
            }

            MostrarMensaje("El producto fue guardado correctamente", "Correcto");
            doClose();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        if (listCate.getSelectedValue() != null) {
            String Categoria = listCate.getSelectedValue().toString();
            MListCate.removeElement(Categoria);
            MBoxCate.addElement(Categoria);
            boxCate.setModel(MBoxCate);
            listCate.setModel(MListCate);
            listCate.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnDelActionPerformed

    private void listProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listProductosActionPerformed
        if (!listProductos.getSelectedItem().toString().equals("Seleccione un Producto")) {
            Nuevo = Productos.get(NRefs[listProductos.getSelectedIndex()]);

            txtNombre.setText(Nuevo.getNombre());
            txtNRef.setText(Nuevo.getNRef().toString());
            txtDesc.setText(Nuevo.getDescripcion());
            txtPrecio.setText(Nuevo.getPrecio().toString());
            txtEsp.setText(Nuevo.getEspecificacion());

            try {
                IVMP.seleccionarProducto(NRefs[listProductos.getSelectedIndex()]);
                Map<String, DataCategoria> Cates = IVMP.listarCategoriaProductos();



                MListCate = new DefaultListModel();

                for (Map.Entry<String, DataCategoria> entry : Cates.entrySet()) {
                    MListCate.addElement(entry.getValue().getNombre());
                    MBoxCate.removeElement(entry.getValue().getNombre());
                }

                listCate.setModel(MListCate);
                boxCate.setModel(MBoxCate);

                paneDatos.setVisible(true);
                txtNombre.setEnabled(true);
                txtDesc.setEnabled(true);
                txtEsp.setEnabled(true);
                txtPrecio.setEnabled(true);
                btnFijar.setEnabled(true);
                paneCates.setVisible(false);

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_listProductosActionPerformed

    private void ArbolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ArbolMouseClicked
        try {
            paneDatos.setVisible(false);
            paneCates.setVisible(false);

            String[] texto = {"Seleccione un Producto"};

            listProductos.setModel(new DefaultComboBoxModel(texto));

            if (Arbol.getLeadSelectionPath() != null) {
                String seleccion = Arbol.getLeadSelectionPath().getLastPathComponent().toString();
                if (IVMP.seleccionarCategoria(seleccion).getEsSimple()) {
                    Productos = IVMP.listarProductosCategoria();
                    Lista = new String[Productos.size() + 1];
                    NRefs = new int[Productos.size()];
                    DefaultComboBoxModel Modelo = new DefaultComboBoxModel();

                    int i = 0;
                    for (Map.Entry<Integer, DataProducto> entry : Productos.entrySet()) {
                        Modelo.addElement(entry.getValue().getNombre());
                        NRefs[i] = entry.getValue().getNRef();
                        i++;
                    }
                    Modelo.addElement("Seleccione un Producto");

                    listProductos.setModel(Modelo);
                    listProductos.setSelectedIndex(i);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_ArbolMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree Arbol;
    private javax.swing.JComboBox boxCate;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnFijar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList listCate;
    private javax.swing.JComboBox listProductos;
    private javax.swing.JPanel paneCates;
    private javax.swing.JPanel paneDatos;
    private javax.swing.JTextField txtDesc;
    private javax.swing.JTextArea txtEsp;
    private javax.swing.JTextField txtNRef;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
